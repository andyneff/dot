#!/usr/bin/env bash

set -eu

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")"; pwd)"
source "${SCRIPT_DIR}/dot.env"
source "${SCRIPT_DIR}/external/vsi_common/linux/dir_tools.bsh"

if [ "${OS-}" = "Windows_NT" ] && [ -z "${FORCE_LN+set}" ]; then
  if ! "${SYSTEMROOT}/system32/whoami.exe" //groups | grep -q "S-1-5-32-544.*Enabled group"; then
    # In Windows, you need Admin for mklink (or Developer Mode)
    echo "You are not running with admin rights, mklink will probably fail" >&2
  fi
fi

for files_dir in "${SCRIPT_DIR}/dot_repos"/*; do
  while IFS= read -r -d '' dotfile || [ -n "${dotfile}" ]; do
    path_part=$(relative_path "$dotfile" "${files_dir}/files")

    target=~/"${path_part}"
    copy_target="${BACKUP_DIR}/${path_part}"

    # stash old dotfiles
    if [ -e "${target}" ]; then
      if [ ! -e "${copy_target}" ] && [ ! -L "${target}" ]; then
        mkdir -p "$(dirname "${copy_target}")"
        mv "${target}" "${copy_target}"
      else
        rm "${target}"
      fi
    fi

    mkdir -p "$(dirname "${target}")"

    # create new symbolic links
    symlink "${dotfile}" "${target}"

  done < <(find "${files_dir}/files" -type f -print0)

  if [ -r "${files_dir}/custom.bsh" ]; then
    source "${files_dir}/custom.bsh"
    setup
  fi
done
